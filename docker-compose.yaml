services:
  web:
    build: .
    links:
      - redis
      - rabitmq
      - worker
    depends_on:
      - redis
      - rabitmq
      - worker
    environment:
      FLASK_ENV: "development"
      APP_BROKER_URI: "pyamqp://guest@rabitmq:5672"
      APP_BACKEND: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    volumes:
      - .:/code
    ports:
      - "6000:8000"
    entrypoint: poetry
    command: run gunicorn app:app -w 3 -b 0.0.0.0:8000 --timeout 120
  redis:
    image: "redis"
  rabitmq:
    image: "rabbitmq"
  worker:
    hostname: worker
    environment:
      APP_BROKER_URI: "pyamqp://guest@rabitmq:5672"
      APP_BACKEND: "redis://redis:6379/0"
      CELERY_RESULT_BACKEND: "redis://redis:6379/0"
    build:
      context: .
    entrypoint: poetry
    command: run celery -A app.celery worker --loglevel=info
    links:
      - redis
      - rabitmq
    depends_on:
      - redis
      - rabitmq
    volumes:
      - .:/code
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    links:
      - web
    depends_on:
      - web
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./nginx/certificates/:/etc/nginx/ssl/
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

